# This is a basic workflow to help you get started with Actions

name: Nightwatch tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  pull_request:
    branches: [ develop,stage,master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Nightwatch-Pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ['7.4']
        node-version: [15.x]


    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install chrome browser
        run: sudo apt-get update && sudo apt-get install google-chrome-stable

      - name: Set up PHP ${{ matrix.php_version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run phpcs with Drupal coding standards.
        run: >
          ./vendor/bin/phpcs -p -s
      - name: Run phplint with Drupal coding standards.
        run: > 
           ./vendor/bin/phplint 
      - name: Install SSH key for accessing Acquia Repository
        uses: shimataro/ssh-key-action@v2
        with:
            key: ${{ secrets.SSH_PRIVATE }}
            known_hosts: ${{ secrets.SSH_KNOWN_HOST }}
        
      - name: Use Node.js for Night watch test cases ${{ matrix.node-version }}
        if: ${{ startsWith(github.ref, 'refs/heads/develop'  ) }} || ${{ startsWith(github.ref, 'refs/heads/stage'  ) }} || ${{ startsWith(github.ref, 'refs/tags/tags'  ) }} || ${{ startsWith(github.ref, 'refs/heads/master'  ) }}
        uses: actions/setup-node@v1
        with:
          #ref: workaround
          node-version: ${{ matrix.node-version }}
      - name: Install dependency and Run tests
        continue-on-error: true
        run: |
          cd tests/nightwatch && npm install && npm run test:cucumber:e2e
        if: always()
