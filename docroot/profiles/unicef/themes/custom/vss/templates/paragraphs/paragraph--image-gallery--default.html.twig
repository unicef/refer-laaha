{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}

		{% block paragraph %}
			<div{{attributes.addClass(classes)}}>
				{% block content %}
					{% if gallery is not empty %}
						<div class="img-gallery">
							<div id="carousel{{paragraph.id()}}" class="carousel slide" data-ride="carousel" data-wrap="false" data-interval="false">
								<div class="carousel-inner" role="listbox">
									{% set itemcount = 0 %}
									{% for item in gallery %}
										{% set itemcount = itemcount + 1 %}
										<div class="item  {% if itemcount == 1 %}active{% endif %}" id="slide{{ itemcount }}">
											<img  src="{{ file_url(item.uri) }}" class="img-responsive" alt="{{ item.alt }}"/>
											<div class="carousel-caption1">
												<span class="caption">{{ item.caption }}</span>
											</div>
										</div>
									{% endfor %}
								</div>
								<a class="left carousel-control" href="#carousel{{paragraph.id()}}" role="button" data-slide="prev">
									<span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
									<span class="sr-only">{{ 'Previous'|t }}</span>
								</a>
								<a class="right carousel-control" href="#carousel{{paragraph.id()}}" role="button" data-slide="next">
									<span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
									<span class="sr-only">{{ 'Next'|t }}</span>
								</a>
							</div>
						</div>
					{% endif %}
				{% endblock %}
			</div>
		{% endblock paragraph %}
