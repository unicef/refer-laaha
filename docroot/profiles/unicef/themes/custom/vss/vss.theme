<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_preprocess_links().
 */
function vss_preprocess_links(&$variables) {
  $language_manager = \Drupal::languageManager();
  $language_list = $language_manager::getStandardLanguageList();
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  $variables['lang_name'] = $language_list[$langcode][1];
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function vss_preprocess_block(&$variables) {
  // Add a clearfix class to system branding blocks.
  if ($variables['plugin_id'] == 'system_branding_block') {
    $variables['attributes']['class'][] = 'clearfix';
  }
  if (isset($variables['elements']['content']['#block_content']) && !empty($block = $variables['elements']['content']['#block_content'])) {
    $bundle = $block->bundle();
    if ($bundle == 'footer_contact_information') {
      $config = \Drupal::service('vss_common_config.default')->getFooterDetails();
      if (isset($config['phone']) && !empty($phone = $config['phone'])) {
        $variables['phone'] = $phone;
      }
      if (isset($config['email']) && !empty($email = $config['email'])) {
        $variables['email'] = $email;
      }
      if (isset($config['address']) && !empty($address = $config['address'])) {
        $variables['address'] = $address;
      }
      $variables['#cache']['tags'][] = 'vss_common_config';
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function vss_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content']) && !empty($block = $variables['elements']['content']['#block_content'])) {
    $bundle = $block->bundle();
    if ($bundle == 'footer_contact_information') {
      $suggestions[] = 'block__' . '_footer_contact_information';
    }
  }
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function vss_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  $type = $variables['elements']['#node']->getType();
  if ($type == 'article') {
    $suggestions[] = 'node__' . $type;
  }
}

/**
 * Implements hook_preprocess_node().
 */
function vss_preprocess_node(array &$variables) {
  $node = $variables['elements']['#node'];
  $type = $node->getType();
  if ($type == 'article') {
    $lang_id = \Drupal::languageManager()->getCurrentLanguage()->getId();
    if ($node->hasTranslation($lang_id)) {
      $node = $node->getTranslation($lang_id);
    }
    $html = '';
    foreach ($node->get('field_assets')->referencedEntities() as $entity) {
      if ($entity->bundle() == 'wysiwyg_editor') {
        $variables['wysiwyg'] = TRUE;
        if ($entity->hasTranslation($lang_id)) {
          $entity = $entity->getTranslation($lang_id);
        }
        $html .= strip_tags($entity->get('field_description')->value);
        $html .= ', ';
      }
    }
    if ($html) {
      $html .= '.';
      $string = str_replace('&nbsp;', '', $html);
      $variables['#attached']['drupalSettings']['narrate'] = render($string);
      if ($lang_id == 'ar') {
        $lang_id = 'ar-SA';
      }
      if ($lang_id == 'es') {
        $lang_id = 'es-ES';
        $voiceId = 30;
        $variables['#attached']['drupalSettings']['voiceId'] = $voiceId;
      }
      if ($lang_id == 'en') {
        $lang_id = 'en-US';
        $voiceId = 41;
        $variables['#attached']['drupalSettings']['voiceId'] = $voiceId;
      }
      $variables['#attached']['drupalSettings']['langId'] = $lang_id;
    }
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function vss_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];
  $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
  if ($paragraph->hasTranslation($langcode)) {
    $paragraph = $paragraph->getTranslation($langcode);
  }
  switch ($paragraph->getType()) {
    case 'image':
      if (!$paragraph->field_single_image->isEmpty()) {
        $target_id = $paragraph->field_single_image->target_id;
        $media = \Drupal::entityTypeManager()->getStorage('media')->load($target_id);
        if ($media->hasTranslation($langcode)) {
          $media = $media->getTranslation($langcode);
        }
        if (!$media->field_caption->isEmpty()) {
          $variables['caption'] = $media->field_caption->value;
        }
      }
      break;

    case 'image_gallery':
      if (!$paragraph->field_image->isEmpty()) {
        foreach ($paragraph->field_image as $targetId) {
          $media = \Drupal::entityTypeManager()->getStorage('media')->load($targetId->target_id);
          if ($media->hasTranslation($langcode)) {
            $media = $media->getTranslation($langcode);
          }
          $target_id = $media->field_media_image->target_id;
          $file = \Drupal::entityTypeManager()->getStorage('file')->load($target_id);
          if ($file->hasTranslation($langcode)) {
            $file = $file->getTranslation($langcode);
          }
          $variables['gallery'][$target_id]['alt'] = $media->field_media_image->alt;
          $variables['gallery'][$target_id]['uri'] = $file->uri->value;
          if (!$media->field_caption->isEmpty()) {
            $variables['gallery'][$target_id]['caption'] = $media->field_caption->value;
          }
        }
      }
      break;
  }
}
