<?php

/**
 * @file
 * Contains erpw_location.module.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function erpw_location_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the erpw_location module.
    case 'help.page.erpw_location':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function erpw_location_theme() {
  $theme = [];
  $theme['location'] = [
    'render element' => 'elements',
    'file' => 'location.page.inc',
    'template' => 'location',
  ];
  $theme['location_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'location.page.inc',
  ];
  $theme['manage_location_form'] = [
    'render element' => 'form',
    'template' => 'manage-location-form',
  ];
  $theme['homepage_user_location'] = [
    'variables' => [
      'location' => NULL,
      'tid' => NULL,
    ],
    'template' => 'homepage-user-location',
  ];
  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function erpw_location_theme_suggestions_location(array $variables) {
  $suggestions = [];
  $entity = $variables['elements']['#location'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'location__' . $sanitized_view_mode;
  $suggestions[] = 'location__' . $entity->bundle();
  $suggestions[] = 'location__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'location__' . $entity->id();
  $suggestions[] = 'location__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_ENTITY_TYPE_predelete().
 */
function erpw_location_entity_predelete(EntityInterface $entity) {
  $type = $entity
    ->getEntityTypeId();
  $id = $entity->id();
  if ($type == 'location') {
    $taxonomy_term_id = $entity->get('field_location_taxonomy_term')->getValue()[0]['target_id'];
    if ($term = Term::load($taxonomy_term_id)) {
      // Delete the term itself.
      $term->delete();
    }
  }
}

/**
 * Implements hook_taxonomy_term_delete().
 */
function erpw_location_taxonomy_term_delete($term) {
  $tid = $term->id();
  $delete_query = 'DELETE from erpw_location WHERE country_tid = ' . $tid .
    ' OR level1 =' . $tid .
    ' OR level2 =' . $tid .
    ' OR level3 =' . $tid .
    ' OR level4 =' . $tid;
  $query = \Drupal::database()->query($delete_query);
  $query->execute();
}
