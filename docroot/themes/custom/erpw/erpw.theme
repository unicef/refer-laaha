<?php

/**
 * @file
 * Functions to support theming in the erpw theme.
 */

use Drupal\Core\Url;
use Drupal\node\NodeInterface;
use Drupal\user\Entity\User;
use Drupal\user\UserInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\views\Views;

/**
 * Implements hook_preprocess_fieldset().
 */
function erpw_preprocess_fieldset(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  if (str_contains($current_path, 'service-feedback-form')) {
    $options = $variables['element']['#options'];
    $ratingSteps = [];
    $ratingSteps[] = explode('-- ', reset($options))[1];
    $ratingSteps[] = explode('-- ', end($options))[1];
    $variables['rating_steps_description_1'] = t('@description_1', ['@description_1' => $ratingSteps[0]]);
    $variables['rating_steps_description_2'] = t('@description_2', ['@description_2' => $ratingSteps[1]]);
  }
}

/**
 * Implements hook_preprocess_block().
 */
function erpw_preprocess_block(&$variables) {
  $route = \Drupal::routeMatch()->getRawParameter('user');
  if (!empty($route)) {
    $user = \Drupal::service('entity_type.manager')->getStorage('user')->load($route);
    if ($user instanceof UserInterface) {
      $route = \Drupal::routeMatch()->getRouteName();
      if ($route == 'entity.user.edit_form') {
        $variables['content']['#title'] = t("Update User");
      }
      else {
        $variables['content']['#title'] = t("User Details");
      }
    }
  }
  if (\Drupal::currentUser()->isAuthenticated()) {
    $account = User::load(\Drupal::currentUser()->id());
    $user_firstname = $account->field_first_name->value;
    $variables['user_logged_in_name'] = ucfirst($user_firstname);
    $variables['#cache']['max-age'] = 0;
  }
  $node = \Drupal::routeMatch()->getRouteName();
  if ($variables['plugin_id'] == 'page_title_block' && $node == 'entity.node.canonical') {
    $route = \Drupal::routeMatch()->getParameter('node');
    if ($route->bundle() == 'service_type') {
      $query_path = \Drupal::request()->query->get('action');
      if (!empty($query_path)) {
        $variables['content']['#title'] = t("Delete Service Type");
      }
      else {
        $variables['content']['#title'] = t("Service Type Details");
      }
    }
    $variables['#cache']['max-age'] = 0;
  }
  if ($variables['plugin_id'] == 'page_title_block' && $node === 'view.referral_pathway_on_homepage.page_2') {
    $location_id = \Drupal::routeMatch()->getParameter('arg_0');
    $entity_type_manager = \Drupal::entityTypeManager();
    $term_storage = $entity_type_manager->getStorage('taxonomy_term');
    $term = $term_storage->load($location_id);
    if ($term) {
      $variables['content']['#title']['#markup'] = $term->getName();
    }
    else {
      $variables['content']['#title']['#markup'] = t('Referral Pathway Details');
    }
  }
}

/**
 * Implements preprocess_HOOK for html()
 */
function erpw_preprocess_html(&$variables) {
  $variables['is_front'] = \Drupal::service('path.matcher')->isFrontPage();
  $url = Url::fromRoute('erpw_custom.dashboard');
  $variables['#attached']['library'][] = 'erpw_custom/erpw_js';
  $variables['#attached']['drupalSettings']['erpw_custom']['dashboard'] = $url->toString();
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for views_view.
 */
function erpw_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  // Get the view object.
  $view = $variables['view'];

  // Add a suggestion based on the view ID.
  $suggestions[] = 'views_view__' . $view->id();

  // Add a suggestion based on the view name.
  $suggestions[] = 'views_view__' . $view->storage->label();

  // Add a suggestion based on the view display ID.
  $display_id = $view->current_display;
  $suggestions[] = 'views_view__' . $view->id() . '__' . $display_id;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for views_view.
 */
function erpw_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  $path = \Drupal::service('path_alias.manager')->getAliasByPath('/' . $route_name);
  if ($variables['elements']['#plugin_id'] != NULL && $variables['elements']['#plugin_id'] === "system_main_block" && str_contains($path, 'calculate_average_service_type_rating')) {
    $suggestions[] = 'block__service_type_rating';
  }
}

/**
 * Implements preprocess_HOOK for html ()
 */
function erpw_preprocess_form_element_label(&$variables) {
  if (isset($variables['element']['#id'])) {
    if ($variables['element']['#id'] == "edit-field-service-type-icon-0-value") {
      $variables['attributes']['class'][] = 'button-with-icon icon-select';
    }
    if ($variables['element']['#id'] == 'edit-field-service-type-color-0-color') {
      $variables['attributes']['class'][] = 'button-with-icon color-select';
    }
  }
}

/**
 * Implements hook_preprocess_node() for dashboard.
 */
function erpw_preprocess_node(&$variables) {
  $node = $variables["node"];
  if ($node->bundle() == 'referral_path_way') {
    $variables['#cache']['contexts'][] = 'user.roles';
  }
  switch ($node->bundle()) {
    case "service_type":
      $node = \Drupal::routeMatch()->getParameter('node');
      if ($node instanceof NodeInterface) {
        $nid = $node->id();
      }
      $query_path = \Drupal::request()->query->get('action');
      $variables['nid'] = !empty($nid) ? $nid : '';
      $variables['query'] = !empty($query_path) ? $query_path : '';
      $variables['location'] = \Drupal::request()->query->get('location');

      $variables['#cache']['contexts'][] = 'url.query_args';

      $url = Url::fromRoute('view.manage_service_types.page_1');
      $variables['#attached']['library'][] = 'erpw_custom/erpw_js';
      $variables['#attached']['drupalSettings']['erpw_custom']['manage_service_type_page'] = $url->toString();
      break;

    case "service_provider":
      $referral = \Drupal::request()->query->get('referer');
      $variables['referral'] = $referral;
      // Check if current domain is "txb".
      if (\Drupal::service('domain.negotiator')->getActiveId() == 'txb_erefer_org' && \Drupal::currentUser()->isAnonymous()) {
        // Check if user is logged in.
        // Redirect to user login page.
        $url = Url::fromRoute('user.login')->toString();
        $response = new RedirectResponse($url);
        $response->send();
      }
      break;
  }
}

/**
 * Implements hook_preprocess_table().
 */
function erpw_preprocess_table(&$variables) {
  $current_path = \Drupal::service('path.current')->getPath();
  if ($current_path != NULL && !str_contains($current_path, 'admin') && str_contains($current_path, 'translations')) {
    $active_domain = \Drupal::service('domain.negotiator')->getActiveDomain();
    $lang = \Drupal::configFactory()->get('domain.language.' . $active_domain->id() . '.language.negotiation');
    $prefixes = $lang->get('languages');
    $domain_languages = [];
    foreach ($prefixes as $lang_code) {
      $lang_name = \Drupal::service('language_manager')->getLanguage($lang_code)->getName();
      $domain_languages[] = $lang_name;
    }

    $table_rows = $variables['rows'];
    $languages[] = $table_rows[0];
    for ($x = 1; $x < count($variables['rows']); $x++) {
      $table_row_lang_name = $table_rows[$x]['cells'][0]['content'];
      if (in_array($table_row_lang_name, $domain_languages)) {
        $languages[] = $table_rows[$x];
      }
    }
    $variables['rows'] = $languages;
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function erpw_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  if ($view->id() == 'referral_pathway_on_homepage') {
    $variables['#cache']['contexts'][] = 'user.roles';
  }
  if ($view->id() == 'service_based_service_providers_listing') {
    $request = \Drupal::request();
    // Get the 'node' parameter from the URL.
    $variables['serviceTypeID'] = $request->attributes->all()['node'];
  }
}

/**
 * Implements hook_preprocess_user().
 */
function erpw_preprocess_user(&$variables) {
  $variables['mail'] = $variables['user']->getEmail();
  $form_user_id = \Drupal::request()->attributes->get('user')->id();
  $form_user = User::load($form_user_id);
  $location = \Drupal::service('erpw_location.location_services')->getUserLocation($form_user);
  $variables['location'] = $location;
  $current_user_id = \Drupal::currentUser()->id();
  $roles_ar = $form_user->getRoles();
  $roles = [];
  foreach ($roles_ar as $key => $role) {
    if ($role != 'authenticated') {
      $arr = explode("_", $role);
      $role = implode(" ", $arr);
      $roles[] = ucfirst(strtolower($role));
    }
  }
  $variables['roles'] = $roles;
  if ($current_user_id == $form_user_id) {
    $variables['hide_list_button'] = TRUE;
  }
  else {
    $variables['hide_list_button'] = FALSE;
  }

  // Load current user.
  $current_user = \Drupal::currentUser();

  // Determine whether the current user has the right to edit/delete.
  $can_edit_user = erpw_custom_can_edit_user($current_user, $form_user);

  // Set the variable for the Twig template.
  $variables['can_edit_user'] = $can_edit_user;
  $variables['access'] = User::load($form_user_id)->get('access')->value;
  $variables['status'] = User::load($form_user_id)->get('status')->value;
}

/**
 * Implements hook_preprocess_node__service_provider().
 */
function erpw_preprocess_field__node__service_provider(&$variables) {
  if ($variables['field_name'] == 'field_location') {
    $location_tid = $variables['items'][0]['content']['#plain_text'];
    $loc_name = [];
    if ($location_tid) {
      $parents = \Drupal::service('erpw_location.location_services')->getAllAncestors($location_tid);
      $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadMultiple(array_reverse($parents));
      foreach ($terms as $term) {
        $loc_name[] = $term->label();
      }
    }
    $variables['items'][0]['content']['#plain_text'] = implode(', ', $loc_name);
  }
  if ($variables['field_name'] == 'field_age_group') {
    $age_group = [];
    $i = 1;
    foreach ($variables['items'] as $item) {
      unset($variables['items'][$i]);
      $age_group[] = $item['content']['#markup'];
      $i++;
    }
    $variables['items'][0]['content']['#markup'] = implode(', ', $age_group);
  }
}

/**
 * Implements hook_preprocess_page().
 */
function erpw_preprocess_page(&$variables) {
  $url_array = explode("/", Url::fromRoute('<current>', [], ['absolute' => TRUE])->toString());
  if (\Drupal::service('domain.negotiator')->getActiveId() == 'txb_erefer_org' && \Drupal::currentUser()->isAnonymous()) {
    foreach ($url_array as $key => $url) {
      if ($url == "manage-service" || $url == 'services') {
        // Redirect to user login page.
        $url = Url::fromRoute('user.login')->toString();
        $response = new RedirectResponse($url);
        $response->send();
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for views-view-field.html.twig.
 */
function erpw_preprocess_views_view_field(&$variables) {
  $view = $variables['view'];
  $field = $variables['field'];

  if ($view->id() == 'user_count_approval_block' && $view->current_display == 'block_1') {
    if ($field->field == 'nothing') {

      // Load user lists.
      $view = Views::getView('user_lists');
      $view->setDisplay('page_2');
      $view->execute();

      // Replace characters in the field output.
      $renderable = [
        '#theme' => 'user_count_approval_block',
        '#count' => count($view->result),
      ];
      $variables['output'] = \Drupal::service('renderer')->renderPlain($renderable);
    }
  }
}
